// Button component
// -> clickable <button> and <a> elements that trigger links or actions
@import '../config/animation';
@import '../config/borders';
@import '../config/color';
@import '../config/scale';
@import '../config/type';

// --- Base ---
[data-ui-button] {
  $font-size: scale-type('epsilon');
  $padding: 0.68em 1.56em 0.60em 1.56em;
  $fg-color: $white;
  $bg-color: 'text-primary';
  $shadow-height: 0.25em;

  --font-size: #{$font-size};
  --padding: #{$padding};
  --color: var(#{color-property($bg-color)});
  --color-hover: var(#{color-property($bg-color, 'light')});
  --color-shadow: var(#{color-property($bg-color, 'dark')});

  @include font(display);
  @include transition();
  color: $fg-color; // using a color var directly because the label should forever and always be white no matter what
  border-radius: border-radius('large');
  display: inline-block;
  font-size: $font-size; // fallback/default for old browsers
  font-size: var(--font-size);
  padding: $padding; // fallback/default for old browsers
  padding: var(--padding);
  position: relative;
  background-color: color($bg-color);
  background-color: var(--color);
  box-shadow: 0 $shadow-height 0 0 var(--color-shadow);
  top: ($shadow-height * -1);
  margin-bottom: $shadow-height;

  &:hover {
    color: $fg-color;
    background-color: var(--color-hover);
  }

  &:active {
    color: $fg-color;
    background-color: var(--color-shadow);
  }
}

// --- Traits ---

// prominence/size
[data-ui-button~="small"] {
  --font-size: #{scale-type('zeta')};
}

[data-ui-button~="large"] {
  --font-size: #{scale-type('delta')};
}

// role
[data-ui-button~="primary"] {
  $color: 'highlight';
  --color: var(#{color-property($color)});
  --color-hover: var(#{color-property($color, 'light')});
  --color-shadow: var(#{color-property($color, 'dark')});
}

// special effects
// a button that looks like any other text or link; displays only its child element (label or icon)
// -> note uses 'element' naming because it does not inherit from base [data-ui-button] selector
[data-ui-button-incognito] {
  // use !important in color props to override all theme variations, e.g. [data-ui-button].c-theme-reverse
  background: transparent !important;
  border: 0 !important;
  border-radius: 0 !important;
  box-shadow: none !important;
  padding: 0;
  position: relative;
  text-decoration: none;
  text-shadow: none;
  font-size: inherit;
}

// --- Elements ---

[data-ui-button-dropdown] {
  $duration: 0.25s;
  $triangle-size: 1rem;
  @include border-radius;
  @include border;
  @include color-bg('bg');
  left: 50%;
  max-width: 16rem;
  min-width: 12rem;
  position: absolute;
  transform: translateX(-50%);
  transition: opacity $duration, visibility $duration;
  z-index: z('high');

  &::before,
  &::after {
    content: '';
    display: block;
    left: 50%;
    margin-left: ($triangle-size / 2 * -1);
    position: absolute;
  }

  &::before {
    @include triangle('up', $triangle-size, ($triangle-size / 2), color('border'));
    top: -($triangle-size / 2);
  }

  &::after {
    @include triangle('up', $triangle-size, ($triangle-size / 2), color('bg'));
    top: -(($triangle-size / 2) - 0.0625rem);
  }
}